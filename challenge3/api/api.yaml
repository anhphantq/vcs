---
openapi: 3.0.0
info:
  title: CHALLENGE3 API
  description: VCS CHALLENGE
  version: 0.0.1
servers:
- url: http://localhost
paths:
  /user-management/user/signup:
    post:
      description: Create a new account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_signup_body'
        required: true
      responses:
        "200":
          description: Account successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "400":
          description: Invalid syntax
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /user-management/user/signin:
    post:
      description: User login with email and password,
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_signin_body'
        required: true
      responses:
        "200":
          description: Successfully logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        "400":
          description: Invalid syntax
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /user-management/user:
    get:
      description: Get user information
      responses:
        "200":
          description: Request succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "401":
          description: Access token is missing or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      security:
      - bearerAuth: []
    put:
      description: Update user's name/password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/usermanagement_user_body'
        required: true
      responses:
        "200":
          description: Request accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "400":
          description: Invalid syntax
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "401":
          description: Access token is missing or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      security:
      - bearerAuth: []
    delete:
      description: Delete user
      responses:
        "200":
          description: Request accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "401":
          description: Access token is missing or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      security:
      - bearerAuth: []
  /user-management/users:
    get:
      description: Get all users
      responses:
        "200":
          description: Request accepted
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        "401":
          description: Access token is missing or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      security:
      - bearerAuth: []
  /user-management/users/{id}:
    get:
      description: Get user by user id
      parameters:
      - name: id
        in: path
        description: ID of the user to perform operation
        required: true
        style: simple
        explode: false
        schema:
          type: number
      responses:
        "200":
          description: Request accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: Invalid syntax
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "401":
          description: Access token is missing or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      security:
      - bearerAuth: []
    put:
      description: Update user by user id
      parameters:
      - name: id
        in: path
        description: ID of the user to perform operation
        required: true
        style: simple
        explode: false
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/users_id_body'
        required: true
      responses:
        "200":
          description: Request accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "400":
          description: Invalid syntax
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "401":
          description: Access token is missing or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      security:
      - bearerAuth: []
    delete:
      description: Delete user by user id
      parameters:
      - name: id
        in: path
        description: ID of the user to perform operation
        required: true
        style: simple
        explode: false
        schema:
          type: number
      responses:
        "200":
          description: Request accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "400":
          description: Invalid syntax
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "401":
          description: Access token is missing or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      security:
      - bearerAuth: []
  /role-management/roles:
    get:
      description: Get all roles in database
      responses:
        "200":
          description: Request accepted
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'
        "401":
          description: Access token is missing or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      security:
      - bearerAuth: []
    post:
      description: Create a new role
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rolemanagement_roles_body'
        required: true
      responses:
        "200":
          description: Request accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
        "400":
          description: Invalid syntax
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "401":
          description: Access token is missing or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      security:
      - bearerAuth: []
  /role-management/roles/{id}:
    get:
      description: Get role by ID
      parameters:
      - name: id
        in: path
        description: ID of the role to perform operation
        required: true
        style: simple
        explode: false
        schema:
          type: number
      responses:
        "200":
          description: Request accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
        "400":
          description: Invalid syntax
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "401":
          description: Access token is missing or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      security:
      - bearerAuth: []
    delete:
      description: Delete role by ID
      parameters:
      - name: id
        in: path
        description: ID of the role to perform operation
        required: true
        style: simple
        explode: false
        schema:
          type: number
      responses:
        "200":
          description: Request accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "400":
          description: Invalid syntax
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "401":
          description: Access token is missing or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      security:
      - bearerAuth: []
  /permission-management/permissions:
    get:
      description: Get all permissions in database
      responses:
        "200":
          description: Request accepted
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Permission'
        "401":
          description: Access token is missing or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      security:
      - bearerAuth: []
    post:
      description: Create a new permission
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/permissionmanagement_permissions_body'
        required: true
      responses:
        "200":
          description: Request accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_3'
        "400":
          description: Invalid syntax
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "401":
          description: Access token is missing or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      security:
      - bearerAuth: []
  /permission-management/permissions/{id}:
    get:
      description: Get permission by ID
      parameters:
      - name: id
        in: path
        description: ID of the permission to perform operation
        required: true
        style: simple
        explode: false
        schema:
          type: number
      responses:
        "200":
          description: Request accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
        "400":
          description: Invalid syntax
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "401":
          description: Access token is missing or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      security:
      - bearerAuth: []
    delete:
      description: Delete permission by ID
      parameters:
      - name: id
        in: path
        description: ID of the permission to perform operation
        required: true
        style: simple
        explode: false
        schema:
          type: number
      responses:
        "200":
          description: Request accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "400":
          description: Invalid syntax
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "401":
          description: Access token is missing or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      security:
      - bearerAuth: []
  /granting-management/granting:
    get:
      description: Get all the granted permission
      responses:
        "200":
          description: Request accepted
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Granting'
        "401":
          description: Access token is missing or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      security:
      - bearerAuth: []
    post:
      description: Granting permission to a role
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Granting'
        required: true
      responses:
        "200":
          description: Request accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "400":
          description: Invalid syntax
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "401":
          description: Access token is missing or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      security:
      - bearerAuth: []
    delete:
      description: Delete a granted permission of a role
      parameters:
      - name: role_id
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: number
      - name: permission_id
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: number
      responses:
        "200":
          description: Request accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "400":
          description: Invalid syntax
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "401":
          description: Access token is missing or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "500":
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      security:
      - bearerAuth: []
components:
  schemas:
    Message:
      required:
      - message
      type: object
      properties:
        message:
          type: string
      description: Error notification
    User:
      required:
      - email
      - role_id
      - username
      type: object
      properties:
        username:
          minLength: 1
          pattern: \p{L}
          type: string
        email:
          pattern: ^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$
          type: string
        role_id:
          type: number
      description: User information
    Role:
      required:
      - name
      - role_id
      type: object
      properties:
        role_id:
          type: number
        name:
          type: string
      description: Role information
    Permission:
      required:
      - name
      - permission_id
      - scope
      type: object
      properties:
        permission_id:
          type: number
        name:
          type: string
        scope:
          type: string
      description: Permission information
    Granting:
      required:
      - permission_id
      - role_id
      type: object
      properties:
        role_id:
          type: number
        permission_id:
          type: number
      description: Granting information
    user_signup_body:
      required:
      - email
      - password
      - username
      type: object
      properties:
        password:
          minLength: 8
          type: string
        email:
          pattern: ^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$
          type: string
        username:
          minLength: 1
          type: string
    inline_response_200:
      allOf:
      - $ref: '#/components/schemas/User'
      - required:
        - user_id
        type: object
        properties:
          user_id:
            type: number
    user_signin_body:
      required:
      - email
      - password
      type: object
      properties:
        email:
          pattern: ^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$
          type: string
        password:
          minLength: 8
          type: string
    inline_response_200_1:
      required:
      - jwt
      type: object
      properties:
        jwt:
          type: string
    usermanagement_user_body:
      oneOf:
      - required:
        - password
        type: object
        properties:
          password:
            minLength: 8
            type: string
      - required:
        - username
        type: object
        properties:
          username:
            minLength: 1
            type: string
    users_id_body:
      oneOf:
      - required:
        - password
        type: object
        properties:
          password:
            minLength: 8
            type: string
      - required:
        - username
        type: object
        properties:
          username:
            minLength: 1
            type: string
    rolemanagement_roles_body:
      required:
      - name
      type: object
      properties:
        name:
          type: string
    inline_response_200_2:
      required:
      - role_id
      type: object
      properties:
        role_id:
          type: string
    permissionmanagement_permissions_body:
      required:
      - name
      - scope
      type: object
      properties:
        name:
          minLength: 1
          type: string
        scope:
          minLength: 1
          type: string
    inline_response_200_3:
      required:
      - permission_id
      type: object
      properties:
        permission_id:
          type: number
  responses:
    SuccessRequest:
      description: Request accepted
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Message'
    BadRequestError:
      description: Invalid syntax
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Message'
    UnauthorizedError:
      description: Access token is missing or invalid
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Message'
    InternalError:
      description: Internal Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Message'
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: jwt
